app评分比率表(可以为EXTERNAL外部表,不指定location默认在该db目录下):
CREATE EXTERNAL TABLE rates (app_name STRING, star_rates STRING)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t';

app等级表app_ranks
按starts全排序分为3片,三种排名,最大值比率,所有数据中所在组的比率
create table app_ranks as
select app_name as app, star_rates as stars,
NTILE(3) OVER (ORDER BY star_rates DESC) as nt,
row_number() OVER (ORDER BY star_rates DESC) as rn,
rank() OVER (ORDER BY star_rates DESC) as rk,
dense_rank() OVER (ORDER BY star_rates DESC) as drk,
CUME_DIST() OVER (ORDER BY star_rates) as cd,
PERCENT_RANK() OVER (ORDER BY star_rates) as pr
from rates order by stars desc;
每组评分中
select app, stars, cd, sum(cd) OVER (PARTITION BY stars ORDER BY rn ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) from app_ranks;
select app, stars, cd, sum(cd) OVER (PARTITION BY stars ORDER BY rn ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) from app_ranks;
select app, stars, cd, sum(cd) OVER (PARTITION BY stars ORDER BY rn ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) from app_ranks;
select app, stars, rn, lead(rn) OVER (PARTITION BY stars ORDER BY rn), lag(rn) OVER (PARTITION BY stars ORDER BY rn) from app_ranks;



用户浏览记录表:(区域,月份,用户)
-----------------------------------------------------------------------------------
CREATE EXTERNAL TABLE visitors (domain  STRING, month STRING, visitor STRING)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t';
访问d001域的所有用户
select * from visitors where domain = 'd001';
访问d001域按时间排序的第一个,最后一个用户
select domain, month, visitor
, first_value(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
, last_value(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
, lead(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
, lag(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
from visitors where domain = 'd001';

select domain
     , month
     , visitor
     , first_value(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
     , last_value(visitor) OVER (PARTITION BY domain ORDER BY month DESC)
     , lead(visitor, 1, 0) OVER (PARTITION BY domain ORDER BY month DESC)
     , lag(visitor, 1, 0) OVER (PARTITION BY domain ORDER BY month DESC)
     , lead(visitor, 12, 0) OVER (PARTITION BY domain ORDER BY month DESC)
     , lag(visitor, 12, 0) OVER (PARTITION BY domain ORDER BY month DESC)
from visitors
where domain = 'd001';

create table visitors_report as
  select domain
       , month
       , visitor
       , lead(visitor, 1, 0) OVER (PARTITION BY domain ORDER BY month DESC)            as last_mon
       , visitor - lead(visitor, 1, 0) OVER (PARTITION BY domain ORDER BY month DESC)  as delta_mon
       , lead(visitor, 12, 0) OVER (PARTITION BY domain ORDER BY month DESC)           as last_year
       , visitor - lead(visitor, 12, 0) OVER (PARTITION BY domain ORDER BY month DESC) as delta_year
  from visitors
;

select * from visitors_report where domain = 'd001' and month > '2014';

select month
     , domain
     , visitor
     , last_mon
     , last_year
from visitors_report
where (domain = 'd001' or domain = 'd002') and month > '2014'
order by month desc, domain asc
limit 100;

select month
     , domain
     , visitor
     , max(visitor) OVER (PARTITION BY month) as max_visitors
     , min(visitor) OVER (PARTITION BY month) as min_visitors
from visitors
where month > '2014'
order by month desc, domain asc;

select *
from (
select month
     , domain
     , visitor
     , max(visitor) OVER (PARTITION BY domain ORDER BY month DESC ROWS BETWEEN CURRENT ROW AND 12 FOLLOWING) as max_visitors_last_12_mon
     , min(visitor) OVER (PARTITION BY domain ORDER BY month DESC ROWS BETWEEN CURRENT ROW AND 12 FOLLOWING) as min_visitors_last_12_mon
from visitors
) v
where month > '20131'
order by month desc, domain asc;